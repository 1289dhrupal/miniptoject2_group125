/*
 * generated by Xtext 2.32.0
 */
package co7217.week18.entity.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class EntityDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class PluginModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co7217.week18.entity.EntityDsl.PluginModel");
		private final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementsElementParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);
		
		//// Definition of the Plugin entity.
		//PluginModel:
		//    (elements+=Element)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(elements+=Element)*
		public Assignment getElementsAssignment() { return cElementsAssignment; }
		
		//Element
		public RuleCall getElementsElementParserRuleCall_0() { return cElementsElementParserRuleCall_0; }
	}
	public class ElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co7217.week18.entity.EntityDsl.Element");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMetaParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWidgetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cShortcodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cCustomPostTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSettingParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cHookParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Element:
		//    Meta | Widget | Shortcode | CustomPostType | Setting | Hook
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Meta | Widget | Shortcode | CustomPostType | Setting | Hook
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Meta
		public RuleCall getMetaParserRuleCall_0() { return cMetaParserRuleCall_0; }
		
		//Widget
		public RuleCall getWidgetParserRuleCall_1() { return cWidgetParserRuleCall_1; }
		
		//Shortcode
		public RuleCall getShortcodeParserRuleCall_2() { return cShortcodeParserRuleCall_2; }
		
		//CustomPostType
		public RuleCall getCustomPostTypeParserRuleCall_3() { return cCustomPostTypeParserRuleCall_3; }
		
		//Setting
		public RuleCall getSettingParserRuleCall_4() { return cSettingParserRuleCall_4; }
		
		//Hook
		public RuleCall getHookParserRuleCall_5() { return cHookParserRuleCall_5; }
	}
	public class MetaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co7217.week18.entity.EntityDsl.Meta");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cVersionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cVersionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cVersionSTRINGTerminalRuleCall_7_0 = (RuleCall)cVersionAssignment_7.eContents().get(0);
		private final Keyword cDescriptionKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cEqualsSignKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cDescriptionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_10_0 = (RuleCall)cDescriptionAssignment_10.eContents().get(0);
		private final Keyword cAuthorKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cEqualsSignKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cAuthorAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cAuthorSTRINGTerminalRuleCall_13_0 = (RuleCall)cAuthorAssignment_13.eContents().get(0);
		private final Keyword cLicenseKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cEqualsSignKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cLicenseAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cLicenseSTRINGTerminalRuleCall_16_0 = (RuleCall)cLicenseAssignment_16.eContents().get(0);
		private final Keyword cPrefixKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cEqualsSignKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Assignment cPrefixAssignment_19 = (Assignment)cGroup.eContents().get(19);
		private final RuleCall cPrefixSTRINGTerminalRuleCall_19_0 = (RuleCall)cPrefixAssignment_19.eContents().get(0);
		private final Keyword cTextDomainKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Keyword cEqualsSignKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Assignment cTextDomainAssignment_22 = (Assignment)cGroup.eContents().get(22);
		private final RuleCall cTextDomainSTRINGTerminalRuleCall_22_0 = (RuleCall)cTextDomainAssignment_22.eContents().get(0);
		private final Keyword cActivateKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Keyword cEqualsSignKeyword_24 = (Keyword)cGroup.eContents().get(24);
		private final Assignment cActivateAssignment_25 = (Assignment)cGroup.eContents().get(25);
		private final RuleCall cActivateSTRINGTerminalRuleCall_25_0 = (RuleCall)cActivateAssignment_25.eContents().get(0);
		private final Keyword cDeactivateKeyword_26 = (Keyword)cGroup.eContents().get(26);
		private final Keyword cEqualsSignKeyword_27 = (Keyword)cGroup.eContents().get(27);
		private final Assignment cDeactivateAssignment_28 = (Assignment)cGroup.eContents().get(28);
		private final RuleCall cDeactivateSTRINGTerminalRuleCall_28_0 = (RuleCall)cDeactivateAssignment_28.eContents().get(0);
		private final Keyword cUninstallKeyword_29 = (Keyword)cGroup.eContents().get(29);
		private final Keyword cEqualsSignKeyword_30 = (Keyword)cGroup.eContents().get(30);
		private final Assignment cUninstallAssignment_31 = (Assignment)cGroup.eContents().get(31);
		private final RuleCall cUninstallSTRINGTerminalRuleCall_31_0 = (RuleCall)cUninstallAssignment_31.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_32 = (Keyword)cGroup.eContents().get(32);
		
		//Meta:
		//    'Meta' '{'
		//        // Definition of various properties of the plugin.
		//        // Each property follows the pattern: keyword '=' value
		//        'name' '=' name=STRING
		//        'version' '=' version=STRING
		//        'description' '=' description=STRING
		//        'author' '=' author=STRING
		//        'license' '=' license=STRING
		//        'prefix' '=' prefix=STRING
		//        'textDomain' '=' textDomain=STRING
		//        'activate' '=' activate=STRING?
		//        'deactivate' '=' deactivate=STRING?
		//        'uninstall' '=' uninstall=STRING?
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Meta' '{'
		//    // Definition of various properties of the plugin.
		//    // Each property follows the pattern: keyword '=' value
		//    'name' '=' name=STRING
		//    'version' '=' version=STRING
		//    'description' '=' description=STRING
		//    'author' '=' author=STRING
		//    'license' '=' license=STRING
		//    'prefix' '=' prefix=STRING
		//    'textDomain' '=' textDomain=STRING
		//    'activate' '=' activate=STRING?
		//    'deactivate' '=' deactivate=STRING?
		//    'uninstall' '=' uninstall=STRING?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Meta'
		public Keyword getMetaKeyword_0() { return cMetaKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//// Definition of various properties of the plugin.
		//// Each property follows the pattern: keyword '=' value
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//name=STRING
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }
		
		//'version'
		public Keyword getVersionKeyword_5() { return cVersionKeyword_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_6() { return cEqualsSignKeyword_6; }
		
		//version=STRING
		public Assignment getVersionAssignment_7() { return cVersionAssignment_7; }
		
		//STRING
		public RuleCall getVersionSTRINGTerminalRuleCall_7_0() { return cVersionSTRINGTerminalRuleCall_7_0; }
		
		//'description'
		public Keyword getDescriptionKeyword_8() { return cDescriptionKeyword_8; }
		
		//'='
		public Keyword getEqualsSignKeyword_9() { return cEqualsSignKeyword_9; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_10() { return cDescriptionAssignment_10; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_10_0() { return cDescriptionSTRINGTerminalRuleCall_10_0; }
		
		//'author'
		public Keyword getAuthorKeyword_11() { return cAuthorKeyword_11; }
		
		//'='
		public Keyword getEqualsSignKeyword_12() { return cEqualsSignKeyword_12; }
		
		//author=STRING
		public Assignment getAuthorAssignment_13() { return cAuthorAssignment_13; }
		
		//STRING
		public RuleCall getAuthorSTRINGTerminalRuleCall_13_0() { return cAuthorSTRINGTerminalRuleCall_13_0; }
		
		//'license'
		public Keyword getLicenseKeyword_14() { return cLicenseKeyword_14; }
		
		//'='
		public Keyword getEqualsSignKeyword_15() { return cEqualsSignKeyword_15; }
		
		//license=STRING
		public Assignment getLicenseAssignment_16() { return cLicenseAssignment_16; }
		
		//STRING
		public RuleCall getLicenseSTRINGTerminalRuleCall_16_0() { return cLicenseSTRINGTerminalRuleCall_16_0; }
		
		//'prefix'
		public Keyword getPrefixKeyword_17() { return cPrefixKeyword_17; }
		
		//'='
		public Keyword getEqualsSignKeyword_18() { return cEqualsSignKeyword_18; }
		
		//prefix=STRING
		public Assignment getPrefixAssignment_19() { return cPrefixAssignment_19; }
		
		//STRING
		public RuleCall getPrefixSTRINGTerminalRuleCall_19_0() { return cPrefixSTRINGTerminalRuleCall_19_0; }
		
		//'textDomain'
		public Keyword getTextDomainKeyword_20() { return cTextDomainKeyword_20; }
		
		//'='
		public Keyword getEqualsSignKeyword_21() { return cEqualsSignKeyword_21; }
		
		//textDomain=STRING
		public Assignment getTextDomainAssignment_22() { return cTextDomainAssignment_22; }
		
		//STRING
		public RuleCall getTextDomainSTRINGTerminalRuleCall_22_0() { return cTextDomainSTRINGTerminalRuleCall_22_0; }
		
		//'activate'
		public Keyword getActivateKeyword_23() { return cActivateKeyword_23; }
		
		//'='
		public Keyword getEqualsSignKeyword_24() { return cEqualsSignKeyword_24; }
		
		//activate=STRING?
		public Assignment getActivateAssignment_25() { return cActivateAssignment_25; }
		
		//STRING
		public RuleCall getActivateSTRINGTerminalRuleCall_25_0() { return cActivateSTRINGTerminalRuleCall_25_0; }
		
		//'deactivate'
		public Keyword getDeactivateKeyword_26() { return cDeactivateKeyword_26; }
		
		//'='
		public Keyword getEqualsSignKeyword_27() { return cEqualsSignKeyword_27; }
		
		//deactivate=STRING?
		public Assignment getDeactivateAssignment_28() { return cDeactivateAssignment_28; }
		
		//STRING
		public RuleCall getDeactivateSTRINGTerminalRuleCall_28_0() { return cDeactivateSTRINGTerminalRuleCall_28_0; }
		
		//'uninstall'
		public Keyword getUninstallKeyword_29() { return cUninstallKeyword_29; }
		
		//'='
		public Keyword getEqualsSignKeyword_30() { return cEqualsSignKeyword_30; }
		
		//uninstall=STRING?
		public Assignment getUninstallAssignment_31() { return cUninstallAssignment_31; }
		
		//STRING
		public RuleCall getUninstallSTRINGTerminalRuleCall_31_0() { return cUninstallSTRINGTerminalRuleCall_31_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_32() { return cRightCurlyBracketKeyword_32; }
	}
	public class WidgetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co7217.week18.entity.EntityDsl.Widget");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWidgetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cWidgetNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cWidgetNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cWidgetNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cWidgetNameAssignment_4.eContents().get(0);
		private final Keyword cWidgetDescriptionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cWidgetDescriptionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cWidgetDescriptionSTRINGTerminalRuleCall_7_0 = (RuleCall)cWidgetDescriptionAssignment_7.eContents().get(0);
		private final Assignment cSettingsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSettingsSettingParserRuleCall_8_0 = (RuleCall)cSettingsAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//// Definition of the Widget entity.
		//Widget:
		//    'Widget' '{'
		//        'widgetName' '=' widgetName=STRING
		//        'widgetDescription' '=' widgetDescription=STRING?
		//        // A widget can have multiple settings.
		//        (settings+=Setting)*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Widget' '{'
		//    'widgetName' '=' widgetName=STRING
		//    'widgetDescription' '=' widgetDescription=STRING?
		//    // A widget can have multiple settings.
		//    (settings+=Setting)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Widget'
		public Keyword getWidgetKeyword_0() { return cWidgetKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'widgetName'
		public Keyword getWidgetNameKeyword_2() { return cWidgetNameKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//widgetName=STRING
		public Assignment getWidgetNameAssignment_4() { return cWidgetNameAssignment_4; }
		
		//STRING
		public RuleCall getWidgetNameSTRINGTerminalRuleCall_4_0() { return cWidgetNameSTRINGTerminalRuleCall_4_0; }
		
		//'widgetDescription'
		public Keyword getWidgetDescriptionKeyword_5() { return cWidgetDescriptionKeyword_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_6() { return cEqualsSignKeyword_6; }
		
		//widgetDescription=STRING?
		public Assignment getWidgetDescriptionAssignment_7() { return cWidgetDescriptionAssignment_7; }
		
		//STRING
		public RuleCall getWidgetDescriptionSTRINGTerminalRuleCall_7_0() { return cWidgetDescriptionSTRINGTerminalRuleCall_7_0; }
		
		//// A widget can have multiple settings.
		//(settings+=Setting)*
		public Assignment getSettingsAssignment_8() { return cSettingsAssignment_8; }
		
		//Setting
		public RuleCall getSettingsSettingParserRuleCall_8_0() { return cSettingsSettingParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ShortcodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co7217.week18.entity.EntityDsl.Shortcode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cShortcodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cShortcodeNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cShortcodeNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cShortcodeNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cShortcodeNameAssignment_4.eContents().get(0);
		private final Assignment cSettingsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSettingsSettingParserRuleCall_5_0 = (RuleCall)cSettingsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//// Definition of the Shortcode entity.
		//Shortcode:
		//    'Shortcode' '{'
		//        'shortcodeName' '=' shortcodeName=STRING
		//        // A shortcode can have multiple settings.
		//        (settings+=Setting)*
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Shortcode' '{'
		//    'shortcodeName' '=' shortcodeName=STRING
		//    // A shortcode can have multiple settings.
		//    (settings+=Setting)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Shortcode'
		public Keyword getShortcodeKeyword_0() { return cShortcodeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'shortcodeName'
		public Keyword getShortcodeNameKeyword_2() { return cShortcodeNameKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//shortcodeName=STRING
		public Assignment getShortcodeNameAssignment_4() { return cShortcodeNameAssignment_4; }
		
		//STRING
		public RuleCall getShortcodeNameSTRINGTerminalRuleCall_4_0() { return cShortcodeNameSTRINGTerminalRuleCall_4_0; }
		
		//// A shortcode can have multiple settings.
		//(settings+=Setting)*
		public Assignment getSettingsAssignment_5() { return cSettingsAssignment_5; }
		
		//Setting
		public RuleCall getSettingsSettingParserRuleCall_5_0() { return cSettingsSettingParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class CustomPostTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co7217.week18.entity.EntityDsl.CustomPostType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCustomPostTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cCptNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cCptNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCptNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cCptNameAssignment_4.eContents().get(0);
		private final Keyword cCptSingularNameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cCptSingularNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cCptSingularNameSTRINGTerminalRuleCall_7_0 = (RuleCall)cCptSingularNameAssignment_7.eContents().get(0);
		private final Keyword cCptSupportsKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cEqualsSignKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cCptSupportsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cCptSupportsStringListParserRuleCall_10_0 = (RuleCall)cCptSupportsAssignment_10.eContents().get(0);
		private final Keyword cCptTaxonomiesKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cEqualsSignKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cCptTaxonomiesAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cCptTaxonomiesStringListParserRuleCall_13_0 = (RuleCall)cCptTaxonomiesAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//// Definition of the CustomPostType entity.
		//CustomPostType:
		//    'CustomPostType' '{'
		//        'cptName' '=' cptName=STRING
		//        'cptSingularName' '=' cptSingularName=STRING
		//        'cptSupports' '=' cptSupports+=StringList?
		//        'cptTaxonomies' '=' cptTaxonomies+=StringList?
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'CustomPostType' '{'
		//    'cptName' '=' cptName=STRING
		//    'cptSingularName' '=' cptSingularName=STRING
		//    'cptSupports' '=' cptSupports+=StringList?
		//    'cptTaxonomies' '=' cptTaxonomies+=StringList?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'CustomPostType'
		public Keyword getCustomPostTypeKeyword_0() { return cCustomPostTypeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'cptName'
		public Keyword getCptNameKeyword_2() { return cCptNameKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//cptName=STRING
		public Assignment getCptNameAssignment_4() { return cCptNameAssignment_4; }
		
		//STRING
		public RuleCall getCptNameSTRINGTerminalRuleCall_4_0() { return cCptNameSTRINGTerminalRuleCall_4_0; }
		
		//'cptSingularName'
		public Keyword getCptSingularNameKeyword_5() { return cCptSingularNameKeyword_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_6() { return cEqualsSignKeyword_6; }
		
		//cptSingularName=STRING
		public Assignment getCptSingularNameAssignment_7() { return cCptSingularNameAssignment_7; }
		
		//STRING
		public RuleCall getCptSingularNameSTRINGTerminalRuleCall_7_0() { return cCptSingularNameSTRINGTerminalRuleCall_7_0; }
		
		//'cptSupports'
		public Keyword getCptSupportsKeyword_8() { return cCptSupportsKeyword_8; }
		
		//'='
		public Keyword getEqualsSignKeyword_9() { return cEqualsSignKeyword_9; }
		
		//cptSupports+=StringList?
		public Assignment getCptSupportsAssignment_10() { return cCptSupportsAssignment_10; }
		
		//StringList
		public RuleCall getCptSupportsStringListParserRuleCall_10_0() { return cCptSupportsStringListParserRuleCall_10_0; }
		
		//'cptTaxonomies'
		public Keyword getCptTaxonomiesKeyword_11() { return cCptTaxonomiesKeyword_11; }
		
		//'='
		public Keyword getEqualsSignKeyword_12() { return cEqualsSignKeyword_12; }
		
		//cptTaxonomies+=StringList?
		public Assignment getCptTaxonomiesAssignment_13() { return cCptTaxonomiesAssignment_13; }
		
		//StringList
		public RuleCall getCptTaxonomiesStringListParserRuleCall_13_0() { return cCptTaxonomiesStringListParserRuleCall_13_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}
	public class SettingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co7217.week18.entity.EntityDsl.Setting");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSettingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSettingNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSettingNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSettingNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cSettingNameAssignment_4.eContents().get(0);
		private final Keyword cSettingTypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSettingTypeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSettingTypeSTRINGTerminalRuleCall_7_0 = (RuleCall)cSettingTypeAssignment_7.eContents().get(0);
		private final Keyword cDefaultValueKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cEqualsSignKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cDefaultValueAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cDefaultValueSTRINGTerminalRuleCall_10_0 = (RuleCall)cDefaultValueAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//// Definition of the Setting entity.
		//Setting:
		//    'Setting' '{'
		//        'settingName' '=' settingName=STRING
		//        'settingType' '=' settingType=STRING
		//        'defaultValue' '=' defaultValue=STRING?
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Setting' '{'
		//    'settingName' '=' settingName=STRING
		//    'settingType' '=' settingType=STRING
		//    'defaultValue' '=' defaultValue=STRING?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Setting'
		public Keyword getSettingKeyword_0() { return cSettingKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'settingName'
		public Keyword getSettingNameKeyword_2() { return cSettingNameKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//settingName=STRING
		public Assignment getSettingNameAssignment_4() { return cSettingNameAssignment_4; }
		
		//STRING
		public RuleCall getSettingNameSTRINGTerminalRuleCall_4_0() { return cSettingNameSTRINGTerminalRuleCall_4_0; }
		
		//'settingType'
		public Keyword getSettingTypeKeyword_5() { return cSettingTypeKeyword_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_6() { return cEqualsSignKeyword_6; }
		
		//settingType=STRING
		public Assignment getSettingTypeAssignment_7() { return cSettingTypeAssignment_7; }
		
		//STRING
		public RuleCall getSettingTypeSTRINGTerminalRuleCall_7_0() { return cSettingTypeSTRINGTerminalRuleCall_7_0; }
		
		//'defaultValue'
		public Keyword getDefaultValueKeyword_8() { return cDefaultValueKeyword_8; }
		
		//'='
		public Keyword getEqualsSignKeyword_9() { return cEqualsSignKeyword_9; }
		
		//defaultValue=STRING?
		public Assignment getDefaultValueAssignment_10() { return cDefaultValueAssignment_10; }
		
		//STRING
		public RuleCall getDefaultValueSTRINGTerminalRuleCall_10_0() { return cDefaultValueSTRINGTerminalRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class HookElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co7217.week18.entity.EntityDsl.Hook");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHookKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cHookTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cHookTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cHookTypeHookTypeEnumRuleCall_4_0 = (RuleCall)cHookTypeAssignment_4.eContents().get(0);
		private final Keyword cHookNameKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cHookNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cHookNameSTRINGTerminalRuleCall_7_0 = (RuleCall)cHookNameAssignment_7.eContents().get(0);
		private final Keyword cCallbackKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cEqualsSignKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cCallbackAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cCallbackSTRINGTerminalRuleCall_10_0 = (RuleCall)cCallbackAssignment_10.eContents().get(0);
		private final Keyword cPriorityKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cEqualsSignKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cPriorityAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cPriorityINTTerminalRuleCall_13_0 = (RuleCall)cPriorityAssignment_13.eContents().get(0);
		private final Keyword cAcceptedArgsKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cEqualsSignKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cAcceptedArgsAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cAcceptedArgsINTTerminalRuleCall_16_0 = (RuleCall)cAcceptedArgsAssignment_16.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//// Definition of the Hook entity.
		//Hook:
		//    'Hook' '{'
		//        'hookType' '=' hookType=HookType
		//        'hookName' '=' hookName=STRING
		//        'callback' '=' callback=STRING
		//        'priority' '=' priority=INT?
		//        'acceptedArgs' '=' acceptedArgs=INT?
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Hook' '{'
		//    'hookType' '=' hookType=HookType
		//    'hookName' '=' hookName=STRING
		//    'callback' '=' callback=STRING
		//    'priority' '=' priority=INT?
		//    'acceptedArgs' '=' acceptedArgs=INT?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Hook'
		public Keyword getHookKeyword_0() { return cHookKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'hookType'
		public Keyword getHookTypeKeyword_2() { return cHookTypeKeyword_2; }
		
		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }
		
		//hookType=HookType
		public Assignment getHookTypeAssignment_4() { return cHookTypeAssignment_4; }
		
		//HookType
		public RuleCall getHookTypeHookTypeEnumRuleCall_4_0() { return cHookTypeHookTypeEnumRuleCall_4_0; }
		
		//'hookName'
		public Keyword getHookNameKeyword_5() { return cHookNameKeyword_5; }
		
		//'='
		public Keyword getEqualsSignKeyword_6() { return cEqualsSignKeyword_6; }
		
		//hookName=STRING
		public Assignment getHookNameAssignment_7() { return cHookNameAssignment_7; }
		
		//STRING
		public RuleCall getHookNameSTRINGTerminalRuleCall_7_0() { return cHookNameSTRINGTerminalRuleCall_7_0; }
		
		//'callback'
		public Keyword getCallbackKeyword_8() { return cCallbackKeyword_8; }
		
		//'='
		public Keyword getEqualsSignKeyword_9() { return cEqualsSignKeyword_9; }
		
		//callback=STRING
		public Assignment getCallbackAssignment_10() { return cCallbackAssignment_10; }
		
		//STRING
		public RuleCall getCallbackSTRINGTerminalRuleCall_10_0() { return cCallbackSTRINGTerminalRuleCall_10_0; }
		
		//'priority'
		public Keyword getPriorityKeyword_11() { return cPriorityKeyword_11; }
		
		//'='
		public Keyword getEqualsSignKeyword_12() { return cEqualsSignKeyword_12; }
		
		//priority=INT?
		public Assignment getPriorityAssignment_13() { return cPriorityAssignment_13; }
		
		//INT
		public RuleCall getPriorityINTTerminalRuleCall_13_0() { return cPriorityINTTerminalRuleCall_13_0; }
		
		//'acceptedArgs'
		public Keyword getAcceptedArgsKeyword_14() { return cAcceptedArgsKeyword_14; }
		
		//'='
		public Keyword getEqualsSignKeyword_15() { return cEqualsSignKeyword_15; }
		
		//acceptedArgs=INT?
		public Assignment getAcceptedArgsAssignment_16() { return cAcceptedArgsAssignment_16; }
		
		//INT
		public RuleCall getAcceptedArgsINTTerminalRuleCall_16_0() { return cAcceptedArgsINTTerminalRuleCall_16_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}
	public class StringListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "co7217.week18.entity.EntityDsl.StringList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cValuesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cValuesSTRINGTerminalRuleCall_0_0 = (RuleCall)cValuesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValuesSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cValuesAssignment_1_1.eContents().get(0);
		
		//StringList:
		//    (values+=STRING) (',' values+=STRING)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//(values+=STRING) (',' values+=STRING)*
		public Group getGroup() { return cGroup; }
		
		//(values+=STRING)
		public Assignment getValuesAssignment_0() { return cValuesAssignment_0; }
		
		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_0_0() { return cValuesSTRINGTerminalRuleCall_0_0; }
		
		//(',' values+=STRING)*
		public Group getGroup_1() { return cGroup_1; }
		
		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }
		
		//values+=STRING
		public Assignment getValuesAssignment_1_1() { return cValuesAssignment_1_1; }
		
		//STRING
		public RuleCall getValuesSTRINGTerminalRuleCall_1_1_0() { return cValuesSTRINGTerminalRuleCall_1_1_0; }
	}
	
	public class HookTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "co7217.week18.entity.EntityDsl.HookType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFILTEREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFILTERFilterKeyword_0_0 = (Keyword)cFILTEREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cACTIONEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cACTIONActionKeyword_1_0 = (Keyword)cACTIONEnumLiteralDeclaration_1.eContents().get(0);
		
		//// Enumeration for Hook Type
		//enum HookType:
		//    FILTER='filter' | ACTION='action'
		//;
		public EnumRule getRule() { return rule; }
		
		//FILTER='filter' | ACTION='action'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FILTER='filter'
		public EnumLiteralDeclaration getFILTEREnumLiteralDeclaration_0() { return cFILTEREnumLiteralDeclaration_0; }
		
		//'filter'
		public Keyword getFILTERFilterKeyword_0_0() { return cFILTERFilterKeyword_0_0; }
		
		//ACTION='action'
		public EnumLiteralDeclaration getACTIONEnumLiteralDeclaration_1() { return cACTIONEnumLiteralDeclaration_1; }
		
		//'action'
		public Keyword getACTIONActionKeyword_1_0() { return cACTIONActionKeyword_1_0; }
	}
	
	private final PluginModelElements pPluginModel;
	private final ElementElements pElement;
	private final MetaElements pMeta;
	private final WidgetElements pWidget;
	private final ShortcodeElements pShortcode;
	private final CustomPostTypeElements pCustomPostType;
	private final SettingElements pSetting;
	private final HookElements pHook;
	private final HookTypeElements eHookType;
	private final StringListElements pStringList;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public EntityDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPluginModel = new PluginModelElements();
		this.pElement = new ElementElements();
		this.pMeta = new MetaElements();
		this.pWidget = new WidgetElements();
		this.pShortcode = new ShortcodeElements();
		this.pCustomPostType = new CustomPostTypeElements();
		this.pSetting = new SettingElements();
		this.pHook = new HookElements();
		this.eHookType = new HookTypeElements();
		this.pStringList = new StringListElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("co7217.week18.entity.EntityDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//// Definition of the Plugin entity.
	//PluginModel:
	//    (elements+=Element)*
	//;
	public PluginModelElements getPluginModelAccess() {
		return pPluginModel;
	}
	
	public ParserRule getPluginModelRule() {
		return getPluginModelAccess().getRule();
	}
	
	//Element:
	//    Meta | Widget | Shortcode | CustomPostType | Setting | Hook
	//;
	public ElementElements getElementAccess() {
		return pElement;
	}
	
	public ParserRule getElementRule() {
		return getElementAccess().getRule();
	}
	
	//Meta:
	//    'Meta' '{'
	//        // Definition of various properties of the plugin.
	//        // Each property follows the pattern: keyword '=' value
	//        'name' '=' name=STRING
	//        'version' '=' version=STRING
	//        'description' '=' description=STRING
	//        'author' '=' author=STRING
	//        'license' '=' license=STRING
	//        'prefix' '=' prefix=STRING
	//        'textDomain' '=' textDomain=STRING
	//        'activate' '=' activate=STRING?
	//        'deactivate' '=' deactivate=STRING?
	//        'uninstall' '=' uninstall=STRING?
	//    '}'
	//;
	public MetaElements getMetaAccess() {
		return pMeta;
	}
	
	public ParserRule getMetaRule() {
		return getMetaAccess().getRule();
	}
	
	//// Definition of the Widget entity.
	//Widget:
	//    'Widget' '{'
	//        'widgetName' '=' widgetName=STRING
	//        'widgetDescription' '=' widgetDescription=STRING?
	//        // A widget can have multiple settings.
	//        (settings+=Setting)*
	//    '}'
	//;
	public WidgetElements getWidgetAccess() {
		return pWidget;
	}
	
	public ParserRule getWidgetRule() {
		return getWidgetAccess().getRule();
	}
	
	//// Definition of the Shortcode entity.
	//Shortcode:
	//    'Shortcode' '{'
	//        'shortcodeName' '=' shortcodeName=STRING
	//        // A shortcode can have multiple settings.
	//        (settings+=Setting)*
	//    '}'
	//;
	public ShortcodeElements getShortcodeAccess() {
		return pShortcode;
	}
	
	public ParserRule getShortcodeRule() {
		return getShortcodeAccess().getRule();
	}
	
	//// Definition of the CustomPostType entity.
	//CustomPostType:
	//    'CustomPostType' '{'
	//        'cptName' '=' cptName=STRING
	//        'cptSingularName' '=' cptSingularName=STRING
	//        'cptSupports' '=' cptSupports+=StringList?
	//        'cptTaxonomies' '=' cptTaxonomies+=StringList?
	//    '}'
	//;
	public CustomPostTypeElements getCustomPostTypeAccess() {
		return pCustomPostType;
	}
	
	public ParserRule getCustomPostTypeRule() {
		return getCustomPostTypeAccess().getRule();
	}
	
	//// Definition of the Setting entity.
	//Setting:
	//    'Setting' '{'
	//        'settingName' '=' settingName=STRING
	//        'settingType' '=' settingType=STRING
	//        'defaultValue' '=' defaultValue=STRING?
	//    '}'
	//;
	public SettingElements getSettingAccess() {
		return pSetting;
	}
	
	public ParserRule getSettingRule() {
		return getSettingAccess().getRule();
	}
	
	//// Definition of the Hook entity.
	//Hook:
	//    'Hook' '{'
	//        'hookType' '=' hookType=HookType
	//        'hookName' '=' hookName=STRING
	//        'callback' '=' callback=STRING
	//        'priority' '=' priority=INT?
	//        'acceptedArgs' '=' acceptedArgs=INT?
	//    '}'
	//;
	public HookElements getHookAccess() {
		return pHook;
	}
	
	public ParserRule getHookRule() {
		return getHookAccess().getRule();
	}
	
	//// Enumeration for Hook Type
	//enum HookType:
	//    FILTER='filter' | ACTION='action'
	//;
	public HookTypeElements getHookTypeAccess() {
		return eHookType;
	}
	
	public EnumRule getHookTypeRule() {
		return getHookTypeAccess().getRule();
	}
	
	//StringList:
	//    (values+=STRING) (',' values+=STRING)*
	//;
	public StringListElements getStringListAccess() {
		return pStringList;
	}
	
	public ParserRule getStringListRule() {
		return getStringListAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
