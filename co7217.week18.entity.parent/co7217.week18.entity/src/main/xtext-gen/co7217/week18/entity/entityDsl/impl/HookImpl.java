/**
 * generated by Xtext 2.32.0
 */
package co7217.week18.entity.entityDsl.impl;

import co7217.week18.entity.entityDsl.EntityDslPackage;
import co7217.week18.entity.entityDsl.Hook;
import co7217.week18.entity.entityDsl.HookType;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Hook</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link co7217.week18.entity.entityDsl.impl.HookImpl#getHookType <em>Hook Type</em>}</li>
 *   <li>{@link co7217.week18.entity.entityDsl.impl.HookImpl#getHookName <em>Hook Name</em>}</li>
 *   <li>{@link co7217.week18.entity.entityDsl.impl.HookImpl#getCallback <em>Callback</em>}</li>
 *   <li>{@link co7217.week18.entity.entityDsl.impl.HookImpl#getPriority <em>Priority</em>}</li>
 *   <li>{@link co7217.week18.entity.entityDsl.impl.HookImpl#getAcceptedArgs <em>Accepted Args</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HookImpl extends MinimalEObjectImpl.Container implements Hook
{
  /**
   * The default value of the '{@link #getHookType() <em>Hook Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHookType()
   * @generated
   * @ordered
   */
  protected static final HookType HOOK_TYPE_EDEFAULT = HookType.FILTER;

  /**
   * The cached value of the '{@link #getHookType() <em>Hook Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHookType()
   * @generated
   * @ordered
   */
  protected HookType hookType = HOOK_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getHookName() <em>Hook Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHookName()
   * @generated
   * @ordered
   */
  protected static final String HOOK_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHookName() <em>Hook Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHookName()
   * @generated
   * @ordered
   */
  protected String hookName = HOOK_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getCallback() <em>Callback</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCallback()
   * @generated
   * @ordered
   */
  protected static final String CALLBACK_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCallback() <em>Callback</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCallback()
   * @generated
   * @ordered
   */
  protected String callback = CALLBACK_EDEFAULT;

  /**
   * The default value of the '{@link #getPriority() <em>Priority</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPriority()
   * @generated
   * @ordered
   */
  protected static final int PRIORITY_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getPriority() <em>Priority</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPriority()
   * @generated
   * @ordered
   */
  protected int priority = PRIORITY_EDEFAULT;

  /**
   * The default value of the '{@link #getAcceptedArgs() <em>Accepted Args</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAcceptedArgs()
   * @generated
   * @ordered
   */
  protected static final int ACCEPTED_ARGS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getAcceptedArgs() <em>Accepted Args</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAcceptedArgs()
   * @generated
   * @ordered
   */
  protected int acceptedArgs = ACCEPTED_ARGS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HookImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EntityDslPackage.Literals.HOOK;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public HookType getHookType()
  {
    return hookType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHookType(HookType newHookType)
  {
    HookType oldHookType = hookType;
    hookType = newHookType == null ? HOOK_TYPE_EDEFAULT : newHookType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EntityDslPackage.HOOK__HOOK_TYPE, oldHookType, hookType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getHookName()
  {
    return hookName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHookName(String newHookName)
  {
    String oldHookName = hookName;
    hookName = newHookName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EntityDslPackage.HOOK__HOOK_NAME, oldHookName, hookName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCallback()
  {
    return callback;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCallback(String newCallback)
  {
    String oldCallback = callback;
    callback = newCallback;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EntityDslPackage.HOOK__CALLBACK, oldCallback, callback));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getPriority()
  {
    return priority;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPriority(int newPriority)
  {
    int oldPriority = priority;
    priority = newPriority;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EntityDslPackage.HOOK__PRIORITY, oldPriority, priority));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getAcceptedArgs()
  {
    return acceptedArgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAcceptedArgs(int newAcceptedArgs)
  {
    int oldAcceptedArgs = acceptedArgs;
    acceptedArgs = newAcceptedArgs;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EntityDslPackage.HOOK__ACCEPTED_ARGS, oldAcceptedArgs, acceptedArgs));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EntityDslPackage.HOOK__HOOK_TYPE:
        return getHookType();
      case EntityDslPackage.HOOK__HOOK_NAME:
        return getHookName();
      case EntityDslPackage.HOOK__CALLBACK:
        return getCallback();
      case EntityDslPackage.HOOK__PRIORITY:
        return getPriority();
      case EntityDslPackage.HOOK__ACCEPTED_ARGS:
        return getAcceptedArgs();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EntityDslPackage.HOOK__HOOK_TYPE:
        setHookType((HookType)newValue);
        return;
      case EntityDslPackage.HOOK__HOOK_NAME:
        setHookName((String)newValue);
        return;
      case EntityDslPackage.HOOK__CALLBACK:
        setCallback((String)newValue);
        return;
      case EntityDslPackage.HOOK__PRIORITY:
        setPriority((Integer)newValue);
        return;
      case EntityDslPackage.HOOK__ACCEPTED_ARGS:
        setAcceptedArgs((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EntityDslPackage.HOOK__HOOK_TYPE:
        setHookType(HOOK_TYPE_EDEFAULT);
        return;
      case EntityDslPackage.HOOK__HOOK_NAME:
        setHookName(HOOK_NAME_EDEFAULT);
        return;
      case EntityDslPackage.HOOK__CALLBACK:
        setCallback(CALLBACK_EDEFAULT);
        return;
      case EntityDslPackage.HOOK__PRIORITY:
        setPriority(PRIORITY_EDEFAULT);
        return;
      case EntityDslPackage.HOOK__ACCEPTED_ARGS:
        setAcceptedArgs(ACCEPTED_ARGS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EntityDslPackage.HOOK__HOOK_TYPE:
        return hookType != HOOK_TYPE_EDEFAULT;
      case EntityDslPackage.HOOK__HOOK_NAME:
        return HOOK_NAME_EDEFAULT == null ? hookName != null : !HOOK_NAME_EDEFAULT.equals(hookName);
      case EntityDslPackage.HOOK__CALLBACK:
        return CALLBACK_EDEFAULT == null ? callback != null : !CALLBACK_EDEFAULT.equals(callback);
      case EntityDslPackage.HOOK__PRIORITY:
        return priority != PRIORITY_EDEFAULT;
      case EntityDslPackage.HOOK__ACCEPTED_ARGS:
        return acceptedArgs != ACCEPTED_ARGS_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (hookType: ");
    result.append(hookType);
    result.append(", hookName: ");
    result.append(hookName);
    result.append(", callback: ");
    result.append(callback);
    result.append(", priority: ");
    result.append(priority);
    result.append(", acceptedArgs: ");
    result.append(acceptedArgs);
    result.append(')');
    return result.toString();
  }

} //HookImpl
