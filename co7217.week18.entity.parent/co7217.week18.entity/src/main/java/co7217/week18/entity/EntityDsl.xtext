// Grammar definition for the Entity DSL.
grammar co7217.week18.entity.EntityDsl with org.eclipse.xtext.common.Terminals

// Generation definition for the Entity DSL.
generate entityDsl "http://www.week18.co7217/entity/EntityDsl"

// Definition of the Plugin entity.
Plugin:
    // Plugin starts with the keyword 'Plugin' and is enclosed in curly braces.
    'Plugin' '{'
        // Definition of various properties of the plugin.
        // Each property follows the pattern: keyword '=' value
        'name' '=' name=STRING
        'version' '=' version=STRING
        'description' '=' description=STRING?
        'author' '=' author=STRING?
        'license' '=' license=STRING?
        'prefix' '=' prefix=STRING?
        'textDomain' '=' textDomain=STRING?
        'activate' '=' activate=STRING? 
        'deactivate' '=' deactivate=STRING? 
        'uninstall' '=' uninstall=STRING? 
        // Plugin may contain multiple widgets, shortcodes, custom post types, settings, and hooks.
        (widgets+=Widget)*
        (shortcodes+=Shortcode)*
        (customPostTypes+=CustomPostType)*
        (settings+=Setting)*
        (hooks+=Hook)*
    '}'
;

// Definition of the Widget entity.
Widget:
    'Widget' '{'
        'widgetName' '=' widgetName=STRING
        'widgetDescription' '=' widgetDescription=STRING?
        // A widget can have multiple settings.
        (settings+=Setting)*
    '}'
;

// Definition of the Shortcode entity.
Shortcode:
    'Shortcode' '{'
        'shortcodeName' '=' shortcodeName=STRING
        // A shortcode can have multiple settings.
        (settings+=Setting)*
    '}'
;

// Definition of the CustomPostType entity.
CustomPostType:
    'CustomPostType' '{'
        'postTypeName' '=' postTypeName=STRING
        'supports' '=' supports=STRING?
        'taxonomies' '=' taxonomies=STRING?
    '}'
;

// Definition of the Setting entity.
Setting:
    'Setting' '{'
        'settingName' '=' settingName=STRING
        'settingType' '=' settingType=STRING
        'defaultValue' '=' defaultValue=STRING?
    '}'
;

// Definition of the Hook entity.
Hook:
    'Hook' '{'
        'hookType' '=' hookType=HookType 
        'hookName' '=' hookName=STRING
        'callback' '=' callback=STRING
        'priority' '=' priority=INT?
        'acceptedArgs' '=' acceptedArgs=INT?
    '}'
;

// Enumeration for Hook Type
enum HookType :
    FILTER = 'filter' | ACTION = 'action'
;