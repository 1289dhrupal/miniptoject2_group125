/**
 * generated by Xtext 2.32.0
 */
package co7217.week18.entity.entityDsl.impl;

import co7217.week18.entity.entityDsl.EntityDslPackage;
import co7217.week18.entity.entityDsl.Setting;
import co7217.week18.entity.entityDsl.Widget;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Widget</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link co7217.week18.entity.entityDsl.impl.WidgetImpl#getWidgetName <em>Widget Name</em>}</li>
 *   <li>{@link co7217.week18.entity.entityDsl.impl.WidgetImpl#getWidgetDescription <em>Widget Description</em>}</li>
 *   <li>{@link co7217.week18.entity.entityDsl.impl.WidgetImpl#getSettings <em>Settings</em>}</li>
 * </ul>
 *
 * @generated
 */
public class WidgetImpl extends MinimalEObjectImpl.Container implements Widget
{
  /**
   * The default value of the '{@link #getWidgetName() <em>Widget Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidgetName()
   * @generated
   * @ordered
   */
  protected static final String WIDGET_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWidgetName() <em>Widget Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidgetName()
   * @generated
   * @ordered
   */
  protected String widgetName = WIDGET_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getWidgetDescription() <em>Widget Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidgetDescription()
   * @generated
   * @ordered
   */
  protected static final String WIDGET_DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getWidgetDescription() <em>Widget Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidgetDescription()
   * @generated
   * @ordered
   */
  protected String widgetDescription = WIDGET_DESCRIPTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getSettings() <em>Settings</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSettings()
   * @generated
   * @ordered
   */
  protected EList<Setting> settings;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WidgetImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EntityDslPackage.Literals.WIDGET;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getWidgetName()
  {
    return widgetName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWidgetName(String newWidgetName)
  {
    String oldWidgetName = widgetName;
    widgetName = newWidgetName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EntityDslPackage.WIDGET__WIDGET_NAME, oldWidgetName, widgetName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getWidgetDescription()
  {
    return widgetDescription;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setWidgetDescription(String newWidgetDescription)
  {
    String oldWidgetDescription = widgetDescription;
    widgetDescription = newWidgetDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EntityDslPackage.WIDGET__WIDGET_DESCRIPTION, oldWidgetDescription, widgetDescription));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Setting> getSettings()
  {
    if (settings == null)
    {
      settings = new EObjectContainmentEList<Setting>(Setting.class, this, EntityDslPackage.WIDGET__SETTINGS);
    }
    return settings;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EntityDslPackage.WIDGET__SETTINGS:
        return ((InternalEList<?>)getSettings()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EntityDslPackage.WIDGET__WIDGET_NAME:
        return getWidgetName();
      case EntityDslPackage.WIDGET__WIDGET_DESCRIPTION:
        return getWidgetDescription();
      case EntityDslPackage.WIDGET__SETTINGS:
        return getSettings();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EntityDslPackage.WIDGET__WIDGET_NAME:
        setWidgetName((String)newValue);
        return;
      case EntityDslPackage.WIDGET__WIDGET_DESCRIPTION:
        setWidgetDescription((String)newValue);
        return;
      case EntityDslPackage.WIDGET__SETTINGS:
        getSettings().clear();
        getSettings().addAll((Collection<? extends Setting>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EntityDslPackage.WIDGET__WIDGET_NAME:
        setWidgetName(WIDGET_NAME_EDEFAULT);
        return;
      case EntityDslPackage.WIDGET__WIDGET_DESCRIPTION:
        setWidgetDescription(WIDGET_DESCRIPTION_EDEFAULT);
        return;
      case EntityDslPackage.WIDGET__SETTINGS:
        getSettings().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EntityDslPackage.WIDGET__WIDGET_NAME:
        return WIDGET_NAME_EDEFAULT == null ? widgetName != null : !WIDGET_NAME_EDEFAULT.equals(widgetName);
      case EntityDslPackage.WIDGET__WIDGET_DESCRIPTION:
        return WIDGET_DESCRIPTION_EDEFAULT == null ? widgetDescription != null : !WIDGET_DESCRIPTION_EDEFAULT.equals(widgetDescription);
      case EntityDslPackage.WIDGET__SETTINGS:
        return settings != null && !settings.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (widgetName: ");
    result.append(widgetName);
    result.append(", widgetDescription: ");
    result.append(widgetDescription);
    result.append(')');
    return result.toString();
  }

} //WidgetImpl
